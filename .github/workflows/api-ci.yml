name: api-ci

on:
  workflow_dispatch: {}
  pull_request:
    paths:
      - "apps/api/**"
      - "packages/**"
      - "turbo.json"
      - "package.json"
      - "package-lock.json"
      - ".github/workflows/**"
  push:
    branches: [main]
    paths:
      - "apps/api/**"
      - "packages/**"
      - "turbo.json"
      - "package.json"
      - "package-lock.json"
      - ".github/workflows/**"

concurrency:
  group: api-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  api:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    services:
      postgres:
        image: postgres:16
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tcpl_cpm_test
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/tcpl_cpm_test
      PRISMA_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/tcpl_cpm_test
      NODE_ENV: test
      CI: "true"

    steps:
      - uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install
        run: npm ci

      - name: Prisma Generate
        run: npx prisma generate --schema=apps/api/prisma/schema.prisma

      - name: Prisma Migrate (deploy)
        run: npx prisma migrate deploy --schema=apps/api/prisma/schema.prisma

      - name: Seed (optional)
        run: npx prisma db seed --schema=apps/api/prisma/schema.prisma || true

      - name: Build (API + deps via Turbo)
        run: |
          npx turbo run build --filter=@tcpl-cpm/api^...
          npx turbo run build --filter=@tcpl-cpm/api

      - name: Test API (runInBand)
        run: npm run test -w apps/api -- --runInBand
